{"ast":null,"code":"var _jsxFileName = \"/home/bedri/Desktop/bedrichatapp/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginSuccess } from '../store/authSlice';\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const handleAuth = async () => {\n    const endpoint = isSignup ? 'signup' : 'login';\n    const response = await fetch(`http://localhost:5000/auth/${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      if (isSignup) {\n        alert(\"Signup successful! Please log in.\");\n        setIsSignup(false);\n      } else {\n        dispatch(loginSuccess({\n          user: data.username,\n          token: data.token\n        }));\n      }\n    } else {\n      alert(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `auth-box ${isSignup ? \"signup-mode\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: isSignup ? \"Sign Up\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAuth,\n        children: isSignup ? \"Sign Up\" : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"switch-text\",\n        onClick: () => setIsSignup(!isSignup),\n        children: isSignup ? \"Already have an account? Login\" : \"Don't have an account? Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Auth, \"MMs/osvz9VGTrMpkoW/8GVh1/G0=\", false, function () {\n  return [useDispatch];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["useState","useDispatch","loginSuccess","jsxDEV","_jsxDEV","Auth","_s","username","setUsername","password","setPassword","isSignup","setIsSignup","dispatch","handleAuth","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","user","token","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/bedri/Desktop/bedrichatapp/frontend/src/components/Login.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { loginSuccess } from '../store/authSlice';\nimport \"./Login.css\";\nconst Auth = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [isSignup, setIsSignup] = useState(false); \n    const dispatch = useDispatch();\n\n    const handleAuth = async () => {\n        const endpoint = isSignup ? 'signup' : 'login';\n        const response = await fetch(`http://localhost:5000/auth/${endpoint}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password })\n        });\n\n        const data = await response.json();\n\n        if (response.ok) {\n            if (isSignup) {\n                alert(\"Signup successful! Please log in.\");\n                setIsSignup(false); \n            } else {\n                dispatch(loginSuccess({ user: data.username, token: data.token }));\n            }\n        } else {\n            alert(data.message);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n        <div className={`auth-box ${isSignup ? \"signup-mode\" : \"\"}`}>\n            <h2>{isSignup ? \"Sign Up\" : \"Login\"}</h2>\n            <input\n                type=\"text\"\n                placeholder=\"Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <button onClick={handleAuth}>{isSignup ? \"Sign Up\" : \"Login\"}</button>\n            <p className=\"switch-text\" onClick={() => setIsSignup(!isSignup)}>\n                {isSignup ? \"Already have an account? Login\" : \"Don't have an account? Sign Up\"}\n            </p>\n        </div>\n    </div>\n    );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}