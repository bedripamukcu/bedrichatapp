{"ast":null,"code":"var _jsxFileName = \"/home/bedri/Desktop/bedrichatapp/frontend/src/components/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams();\n  const navigate = useNavigate();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleResetPassword = async () => {\n    const response = await fetch('http://localhost:5000/auth/reset-password', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token,\n        newPassword\n      })\n    });\n    const data = await response.json();\n    setMessage(data.message);\n    if (response.ok) {\n      setTimeout(() => navigate('/login'), 2000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter new password\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleResetPassword,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"xXWC95EM75kzASak7S1PIB1AO6E=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","token","navigate","newPassword","setNewPassword","message","setMessage","handleResetPassword","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/bedri/Desktop/bedrichatapp/frontend/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './ResetPassword.css'\nconst ResetPassword = () => {\n    const { token } = useParams();\n    const navigate = useNavigate();\n    const [newPassword, setNewPassword] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleResetPassword = async () => {\n        const response = await fetch('http://localhost:5000/auth/reset-password', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ token, newPassword })\n        });\n\n        const data = await response.json();\n        setMessage(data.message);\n\n        if (response.ok) {\n            setTimeout(() => navigate('/login'), 2000);\n        }\n    };\n\n    return (\n        <div className = \"reset\" >\n            <h2>Reset Password</h2>\n            <input \n                type=\"password\" \n                placeholder=\"Enter new password\" \n                value={newPassword} \n                onChange={(e) => setNewPassword(e.target.value)} \n            />\n            <button onClick={handleResetPassword}>Reset Password</button>\n            {message && <p>{message}</p>}\n        </div>\n    );\n};\n\nexport default ResetPassword;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC5B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC7B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEb,KAAK;QAAEE;MAAY,CAAC;IAC/C,CAAC,CAAC;IAEF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCV,UAAU,CAACS,IAAI,CAACV,OAAO,CAAC;IAExB,IAAIG,QAAQ,CAACS,EAAE,EAAE;MACbC,UAAU,CAAC,MAAMhB,QAAQ,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC;IAC9C;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAKqB,SAAS,EAAG,OAAO;IAAAC,QAAA,gBACpBtB,OAAA;MAAAsB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB1B,OAAA;MACI2B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAExB,WAAY;MACnByB,QAAQ,EAAGC,CAAC,IAAKzB,cAAc,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnD,CAAC,eACF1B,OAAA;MAAQiC,OAAO,EAAExB,mBAAoB;MAAAa,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5DnB,OAAO,iBAAIP,OAAA;MAAAsB,QAAA,EAAIf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACxB,EAAA,CAlCID,aAAa;EAAA,QACGJ,SAAS,EACVC,WAAW;AAAA;AAAAoC,EAAA,GAF1BjC,aAAa;AAoCnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}